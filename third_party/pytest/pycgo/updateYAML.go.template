// Copyright Â© 2018 Matthias Diester
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

package pycgo

/*
#cgo CFLAGS: <cflags>
#cgo LDFLAGS: <ldflags>

#include <stdlib.h>

extern int updateYAML(int argc, char **argv);
*/
import "C"

import (
	"fmt"
	"unsafe"
)

func UpdateYAML(location string, pathString string, newValue string) error {
	arguments := []*C.char{
		C.CString(location),
		C.CString(pathString),
		C.CString(newValue)}

	for i := range arguments {
		defer C.free(unsafe.Pointer(arguments[i]))
	}

	length := C.int(len(arguments))
	args := (**C.char)(unsafe.Pointer(&arguments[0]))
	returnstatus := int(C.updateYAML(length, args))
	if returnstatus != 0 {
		return fmt.Errorf("return code %d", returnstatus)
	}

	return nil
}
